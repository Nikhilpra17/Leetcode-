  public static int[] twoSum(int[] nums, int target) {
  
  
//     Brute Force Solution 
//     TC = O(N^2) and SC = O(1)

// 		 int [] value = new int[2];
// 		 for (int i =0; i<nums.length; i++) {
// 			for (int k =i+1; k <nums.length; k++) {
// 				int sum = nums[i] + nums[k];
// 					if (sum == target) {
						
// 				}
// 			}
//          }
// 	 return value;



//     Optimized Solution 
//     TC = O(N) and SC = O(N)
    
		HashMap<Integer,Integer> hp = new HashMap<>();
		
		int [] value = new int[2];
		
		int end = 0;
		for (int i =0 ; i< nums.length ; i++) {
			int difference = target - nums[i];
			
			if(hp.containsKey(difference) == true) {
			end = hp.get(difference);
			value[0] = i;
			value[1] = end;
			} else {
				hp.put(nums[i], i);
			}
			
		}
		return value;
 }
}
