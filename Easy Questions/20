class Solution {
    public boolean isValid(String s) {
        
        // Make a Stack 
        
        Stack < Character> hp = new Stack<>();
        
        // Iterate throught the String and push the opening brackets in Stack
        
        for (int i =0;i< s.length(); i++){
            if (s.charAt(i) == '(' || s.charAt(i) == '[' || s.charAt(i) == '{'){
                hp.push(s.charAt(i));
            }
            else {
                
                // if you have bracket to check but your stack is empty -> return False
                // eg: s = "]"      Stack = '';
                
                if (hp.isEmpty()){
                    return false;
                    
                    // Match the bracket -> Function is made sperately for this
                    
                } else if (! isMatching(hp.peek(), s.charAt(i))) {
                	return false;
                }
                
                // If bracket matchs then pop the element 
                
                else {
                	hp.pop();
                }
            }
        }
        
        // After the operation , if the stack is empty return true 
        // Because every time when brackets match, we poped it out of the stack 
        
        return hp.isEmpty();
    }
