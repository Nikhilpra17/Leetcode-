class Solution {
  public int mySqrt(int x) {
      if (x <= 1) {
          return x;
      }
		int pop = binarySearch(x);
		return pop;
	}


public int binarySearch(int n) {

		int start = 0;
		int end = n;
		int ans = 0;

		while (start <= end) {
			long mid = start + (end - start) / 2;

			long square = mid * mid;

			if ((square) == n) {
				return (int)mid;
			}

			if (square > n) {
				end = (int)mid - 1;
			} else if (square < n) {
				start = (int)mid + 1;
				if ((n - ans) > (n - mid)) {
					ans = (int)mid;
				}
			}
		}
			return ans;
	}
}
