/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */

class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        if (head.next == null){
            return null;
        }
        
        int counter = 0 ; 
        ListNode temp = head ;
        
        while (temp != null){
            counter ++;
            temp = temp.next;
        }
        
        
        ListNode ori = head;
        
        
        int diff = counter - n + 1;
        if (diff == 1){
            ori = ori.next;
            return ori;
        }
        
        int count = 1;
        
        
        while ( (diff-1) != count ){
            count ++;
            ori = ori.next;
        }
        
        ori.next = ori.next.next;
        
        return head;
        
    }
}

