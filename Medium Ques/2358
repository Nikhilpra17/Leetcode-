class Solution {
    public int maximumGroups(int[] grades) {
        
        // Sorting is done so that every group formed should have higher value than the previous group
        // Eg = [4,8,3,6,7,4,1,14,2,10] -> After Sorting = [1,2,3,4,4,6,7,8,10,14]
        // Max group can be formed if length is 10 = 4 (Refer Line 25)
        // [1] [2,3] [4,4,6] [7,8,10,14]
        
        
        Arrays.sort(grades);
        
        int len = grades.length;
        
        // If the length is 1 , then 1 is the only group
        
        if (len ==1 && grades[0] != 0){
            return 1;
        }
        
        int possible = possiblegroup(len);
        return possible;
    }
    // Function to count the number of different size group formed  
    
    // Eg - The distinct group fomred if grades of 10 student given 
    // 10 = 1 + 2 + 3 + 4  (At Max 4 groups could be made)
    
    public int possiblegroup(int value){
        int count = 0;
        int sumcheck =0;
        for (int i =1 ; i< value ; i++){
            sumcheck += i;
            if (sumcheck<= value){
                count ++;
            }else{
                break;
            }
        }
        return count;
    }
   
}
