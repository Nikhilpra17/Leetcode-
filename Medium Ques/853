class Solution {
    public int carFleet(int target, int[] position, int[] speed) {
        
        /*
        1- Sort the position array  
        2- Make the stack and add to it
        3- Check time is less then exiting then remove it from array 
        
        */
        if (position.length == 1){
            return 1;
        }
        
        Stack<Double> s = new Stack<>();
        int [][] combine = new int[position.length][2];
        for (int i =0 ; i< position.length; i++){
            combine[i][0] = position[i];
            combine[i][1] = speed[i];
        }
Arrays.sort(combine, java.util.Comparator.comparingInt(o -> o[0]));
        
        
        for (int i = combine.length -1; i>= 0 ; i--){
            double currentTime = (double)(target - combine[i][0])/ combine[i][1] ;
            
            if (!s.isEmpty() && currentTime <= s.peek()){
                continue;
            } else{
                s.push(currentTime);
            }
        }
        
        return s.size();
    }
}
